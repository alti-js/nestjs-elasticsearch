name: Release

on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      prerelease-tag:
        description: 'Prerelease tag (only for prerelease)'
        required: false
        default: 'beta'

env:
  NODE_VERSION: '18'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm run test
        
      - name: Run linting
        run: npm run lint
        
      - name: Build package
        run: npm run build
        
      - name: Bump version
        id: version
        run: |
          if [ "${{ github.event.inputs.version-type }}" = "prerelease" ]; then
            NEW_VERSION=$(npm version prerelease --preid=${{ github.event.inputs.prerelease-tag }} --no-git-tag-version)
          else
            NEW_VERSION=$(npm version ${{ github.event.inputs.version-type }} --no-git-tag-version)
          fi
          echo "new-version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "version-number=${NEW_VERSION#v}" >> $GITHUB_OUTPUT
          
      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG="Initial release"
          else
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s" --no-merges)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new-version }}"
          git tag ${{ steps.version.outputs.new-version }}
          git push origin main --tags
          
      - name: Publish to NPM
        run: |
          if [ "${{ github.event.inputs.version-type }}" = "prerelease" ]; then
            npm publish --access public --tag ${{ github.event.inputs.prerelease-tag }}
          else
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.new-version }}
          release_name: Release ${{ steps.version.outputs.new-version }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ```bash
            npm install @alti-js/nestjs-elasticsearch@${{ steps.version.outputs.version-number }}
            ```
            
            ## Full Changelog
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.previous-tag }}...${{ steps.version.outputs.new-version }}
          draft: false
          prerelease: ${{ github.event.inputs.version-type == 'prerelease' }}
